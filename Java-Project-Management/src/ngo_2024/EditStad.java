/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package ngo_2024;

import java.util.ArrayList;
import java.util.HashMap;
import javax.swing.JOptionPane;
import oru.inf.InfDB;
import oru.inf.InfException;


/**
 *
 * @author Claudia Kourieh
 */

public class EditStad extends javax.swing.JFrame {

    private InfDB idb;
    private int stadId;

    public EditStad(InfDB idb, int stadId) {
        this.idb = idb;
        this.stadId = stadId;
        initComponents();
        setLocationRelativeTo(null); // Centrera fönstret
        fyllComboBoxMedLand(); // Fyller ComboBox med länder
        fyllStadsInfo(); // Hämtar stadens nuvarande information
    }

    private void fyllStadsInfo() {
        try {
            String query = "SELECT namn, land FROM stad WHERE sid = " + stadId;
            HashMap<String, String> stad = idb.fetchRow(query);

            if (stad != null) {
                tfNamn.setText(stad.get("namn")); // Fyller i stadens namn
                String landId = stad.get("land");
                String landNamn = getLandNamn(landId);
                cbLand.setSelectedItem(landId + " - " + landNamn); // Förväljer rätt land i ComboBox
            } else {
                JOptionPane.showMessageDialog(this, "Staden kunde inte hittas.");
                dispose(); // Stänger fönstret om staden inte hittas
            }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av stadens information: " + e.getMessage());
        }
    }

    private String getLandNamn(String landId) {
        try {
            String query = "SELECT namn FROM land WHERE lid = " + landId;
            return idb.fetchSingle(query);
        } catch (InfException e) {
            return "Okänt land";
        }
    }

    private void fyllComboBoxMedLand() {
        try {
            String query = "SELECT lid, namn FROM land";
            ArrayList<HashMap<String, String>> landLista = idb.fetchRows(query);

            if (landLista != null) {
                for (HashMap<String, String> land : landLista) {
                    cbLand.addItem(land.get("lid") + " - " + land.get("namn"));
                }
            }
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid hämtning av länder: " + e.getMessage());
        }
    }

    private void uppdateraStad() {
        try {
            String nyttNamn = tfNamn.getText().trim();
            String valtLand = cbLand.getSelectedItem().toString();
            String landId = valtLand.split(" - ")[0]; // Extraherar landets ID

            if (nyttNamn.isEmpty()) {
                JOptionPane.showMessageDialog(this, "Stadens namn får inte vara tomt.");
                return;
            }

            String query = "UPDATE stad SET namn = '" + nyttNamn + "', land = " + landId + " WHERE sid = " + stadId;
            idb.update(query);
            JOptionPane.showMessageDialog(this, "Staden har uppdaterats!");
            dispose(); // Stänger fönstret efter uppdatering
        } catch (InfException e) {
            JOptionPane.showMessageDialog(this, "Fel vid uppdatering av stad: " + e.getMessage());
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btSpara = new javax.swing.JButton();
        btAvbryt = new javax.swing.JButton();
        lbNamn = new javax.swing.JLabel();
        tfNamn = new javax.swing.JTextField();
        lbLand = new javax.swing.JLabel();
        cbLand = new javax.swing.JComboBox<>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        btSpara.setText("Spara");
        btSpara.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btSparaActionPerformed(evt);
            }
        });

        btAvbryt.setText("Avbryt");
        btAvbryt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAvbrytActionPerformed(evt);
            }
        });

        lbNamn.setText("Namn");

        tfNamn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tfNamnActionPerformed(evt);
            }
        });

        lbLand.setText("Land");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLand, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbNamn, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(94, 94, 94)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(tfNamn, javax.swing.GroupLayout.DEFAULT_SIZE, 150, Short.MAX_VALUE)
                    .addComponent(cbLand, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(113, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(btSpara)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btAvbryt)
                .addGap(51, 51, 51))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbNamn)
                    .addComponent(tfNamn, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lbLand)
                    .addComponent(cbLand, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 101, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btSpara)
                    .addComponent(btAvbryt))
                .addGap(42, 42, 42))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btSparaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btSparaActionPerformed
        // TODO add your handling code here: 
        uppdateraStad(); // Uppdaterar stadens information
    }//GEN-LAST:event_btSparaActionPerformed

    private void btAvbrytActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAvbrytActionPerformed
        // TODO add your handling code here:  
        dispose(); // Stänger fönstret
    }//GEN-LAST:event_btAvbrytActionPerformed

    private void tfNamnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tfNamnActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tfNamnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAvbryt;
    private javax.swing.JButton btSpara;
    private javax.swing.JComboBox<String> cbLand;
    private javax.swing.JLabel lbLand;
    private javax.swing.JLabel lbNamn;
    private javax.swing.JTextField tfNamn;
    // End of variables declaration//GEN-END:variables
}
